{"version":3,"sources":["assets/logo.png","reducers/pokemon.js","store.js","actionTypes.js","actions/getData.js","containers/Home/styled.js","components/FlipCard/styled.js","components/FlipCard/index.js","components/Mosaic/styled.js","components/Mosaic/index.js","components/Head/styled.js","components/Head/index.js","components/Button/index.js","components/Card/styled.js","components/Card/index.js","components/Loading/index.js","containers/Home/index.js","containers/PokemonDetail/styled.js","containers/PokemonDetail/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialValue","createStore","state","type","payload","pokemons","applyMiddleware","thunk","getPokemonsData","name","a","data","fetch","then","response","json","catch","e","console","log","getPokedex","dispatch","Promise","all","pokemon_entries","map","pokemon_species","pokemon","extra_data","newData","PokemonList","MainContainer","styled","div","Row","FlipCardContainer","FlipCard","FlipCardInner","FlipCardFront","FlipCardBack","Flip","onClick","src","sprites","front_default","alt","types","length","i","key","alignCenter","withRouter","push","history","useState","temporalPokemons","setTemporalPokemons","elementPerPage","currentPage","setCurrentPage","totalPages","setTotalPages","useEffect","newPokemons","pages","Math","ceil","slice","Button","end","disabled","page","begin","className","Header","header","Head","logo","button","Frame","LeftBox","RightBox","BaseData","Stats","Card","abilities","ability","stats","base_stat","stat","Home","this","props","Loading","Component","MapDispatchToProps","connect","PokemonDetail","currentPokemon","findpokemonData","bind","pkname","match","params","filter","to","App","store","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3993d1d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.023d617a.png\";","import { GET_ALL_POKEMONS } from '../actionTypes'\nconst initialValue = []\n\nexport const pokemons = (state = initialValue, { type, payload }) => {\n  switch (type) {\n    case GET_ALL_POKEMONS:\n      return {\n        ...state,\n        pokemons: [...payload]\n      }\n    default:\n      return state\n  }\n}","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { pokemons } from './reducers/pokemon'\n\nexport default createStore(pokemons, applyMiddleware(thunk))","export const GET_ALL_POKEMONS = 'GET_ALL_POKEMONS'","import { GET_ALL_POKEMONS } from '../actionTypes'\n\nfunction getPokemons (payload) {\n  return {\n    type: GET_ALL_POKEMONS,\n    payload\n  }\n}\n\nexport const getPokemonsData = async (name) => {\n  let data = {}\n  try {\n     await fetch(`https://pokeapi.co/api/v2/pokemon/${name}/`)\n      .then(response => {\n        return response.json()\n      })\n      .then(response => {\n        data = response\n      })\n      .catch(e => {\n        console.log(e);\n      })\n  } catch {\n    console.log('error on fetch')\n  }\n  return data\n}\n\nexport const getPokedex =  () => {\n  return dispatch => {\n    fetch('https://pokeapi.co/api/v2/pokedex/1/')\n      .then(response => {\n        return response.json()\n      })\n      .then(async response => {\n        let PokemonList = await Promise.all(\n          response.pokemon_entries.map(async data => {\n            let newData = await getPokemonsData(data.pokemon_species.name).then(pokemon => {\n              return {\n                ...data.pokemon_species,\n                extra_data: pokemon\n              }\n            })\n            return newData\n          })\n        )\n      dispatch(getPokemons(PokemonList))\n    })\n  }\n  }","import styled from 'styled-components'\n\nexport const MainContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const Row = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  box-sizing: border-box;\n`","import styled from 'styled-components'\n\nexport const FlipCardContainer = styled.div`\n  width: 25%;\n  height: 300px;\n  @media screen and (max-width: 500px) {\n    width: 50%;\n  }\n`\n\nexport const FlipCard = styled.div`\n  background-color: transparent;\n  height: 100%;\n  width: 100%;\n  border: 4px solid #f1f1f1;\n  perspective: 1000px;\n  cursor: pointer;\n  box-sizing: border-box;\n`\n\nexport const FlipCardInner = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  transition: transform 0.8s;\n  transform-style: preserve-3d;\n  ${FlipCard}:hover & {\n    transform: rotateY(180deg);\n  }\n`\n\nexport const FlipCardFront = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n  background: linear-gradient(to bottom,#fff,#43C6AC);\n  color: black;\n  box-sizing: border-box;\n  > img {\n    height: 100%;\n    max-width: 100%;\n  }\n`\n\nexport const FlipCardBack = styled.div`\n  background-color: dodgerblue;\n  color: white;\n  transform: rotateY(180deg);\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  background-color: rgba(248, 255, 174, .5);\n  & > div {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    margin: 5px 0;\n    color: black;\n  }\n  & > span {\n    font-weight: 500;\n    font-size: 35px;\n    color: black;\n  }\n`","import React from 'react'\nimport {\n  FlipCard,\n  FlipCardBack,\n  FlipCardFront,\n  FlipCardInner,\n  FlipCardContainer\n} from './styled'\n\nconst Flip = ({ onClick, data }) => (\n  <FlipCardContainer>\n    <FlipCard onClick={() => onClick(`pokemon/${data.name}`)}>\n      <FlipCardInner>\n        <FlipCardFront>\n          <img\n            src={data.extra_data && data.extra_data.sprites && data.extra_data.sprites.front_default}\n            alt={data.name}\n          />\n        </FlipCardFront>\n        <FlipCardBack>\n          <span>{data.name}</span>\n          {data.extra_data && data.extra_data.types && data.extra_data.types.length > 0 && \n            data.extra_data.types.map((type, i) => (\n              <div key={i}>{type.type.name}</div>\n            ))\n          }\n        </FlipCardBack>\n      </FlipCardInner>\n    </FlipCard>\n  </FlipCardContainer>\n)\n\nexport default Flip","import styled from 'styled-components'\n\nexport const MainContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const Row = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  ${({ alignCenter }) => {\n    if(alignCenter) return `\n      align-items: center;\n      justify-content: center;\n    `;\n  }};\n  & .page-counter {\n    color: #fff;\n    font-weight: 500;\n    letter-spacing: 2px;\n    text-shadow: 2px 0 0 #43c6ac, -2px 0 0 #43c6ac, 0 2px 0 #43c6ac, 0 -2px 0 #43c6ac, 1px 1px #43c6ac, -1px -1px 0 #43c6ac, 1px -1px 0 #43c6ac, -1px 1px 0 #43c6ac;\n  }\n`","import React, { useEffect, useState } from 'react' \nimport {\n  Row\n} from './styled'\nimport { Flip, Button } from '../'\nimport { withRouter } from 'react-router-dom'\n\n\nconst Mosaic = ({ pokemons, history: { push } }) => {\n  const [temporalPokemons, setTemporalPokemons] = useState([])\n  const [elementPerPage, setElementsPerPage] = useState(8)\n  const [currentPage, setCurrentPage] = useState(0)\n  const [totalPages, setTotalPages]= useState(0)\n  \n  useEffect(() => {\n    let pages = Math.ceil(pokemons.length / elementPerPage)\n    setTotalPages(pages)\n    let newPokemons\n    if (currentPage === 0) newPokemons = pokemons.slice(currentPage, elementPerPage)\n    else newPokemons = pokemons.slice(currentPage, currentPage * elementPerPage)\n    setTemporalPokemons(newPokemons)\n  }, [pokemons])\n  const nextPage = () => {\n    let page = currentPage + 1\n    let begin = page * elementPerPage\n    let end = page * elementPerPage + elementPerPage\n    let newPokemons = pokemons.slice(begin, end)\n    setTemporalPokemons(newPokemons)\n    setCurrentPage(currentPage + 1)\n  }\n  const backPage = () => {\n    let page = currentPage - 1\n    let begin = page * elementPerPage\n    let end = page * elementPerPage + elementPerPage\n    let newPokemons = pokemons.slice(begin, end)\n    setTemporalPokemons(newPokemons)\n    setCurrentPage(currentPage - 1)\n  }\n  const goToEnd = () => {\n    let begin = (totalPages - 1) * elementPerPage\n    let end = totalPages * elementPerPage + elementPerPage\n    let newPokemons = pokemons.slice(begin, end)\n    setTemporalPokemons(newPokemons)\n    setCurrentPage(totalPages - 1)\n  }\n  const goToBegining = () => {\n    let begin = 0\n    let end = elementPerPage\n    let newPokemons = pokemons.slice(begin, end)\n    setTemporalPokemons(newPokemons)\n    setCurrentPage(0)\n  }\n  return (\n    <Row>\n      <Row alignCenter>\n        <Button onClick={goToBegining} disabled={currentPage === 0}>First</Button>\n        <Button onClick={backPage} disabled={currentPage === 0}>{'<'}</Button>\n        <div className='page-counter'>Page: {currentPage + 1}</div>\n        <Button onClick={nextPage} disabled={totalPages === (currentPage + 1)}>{'>'}</Button>\n        <Button onClick={goToEnd} disabled={totalPages === (currentPage + 1)}>Last</Button>\n      </Row>\n      <Row>\n      {\n        temporalPokemons.map((pokemon, i) => (\n          <Flip key={i} data={pokemon} onClick={push} />\n        ))\n      } \n      </Row>\n    </Row>\n  )\n}\n\nexport default withRouter(Mosaic)","import styled from 'styled-components'\n\nexport const Header = styled.header`\n  width: 100%;\n  height: 150px;\n  display: flex;\n  padding: 30px 5px;\n  box-sizing: border-box;\n  align-items: flex-end;\n  background: linear-gradient(to bottom, #F8FFAE, #43C6AC);\n  & > img {\n    width: 300px;\n  }\n  @media screen and (max-width: 500px) {\n    justify-content: center;\n  }\n`","import React from 'react'\nimport logo from '../../assets/logo.png'\nimport { Header } from './styled'\n\nconst Head = () => (\n  <Header>\n    <img src={logo} alt='logo' />\n  </Header>\n)\n\nexport default Head","import styled from 'styled-components'\n\nexport default styled.button`\n  margin: 5px;\n  border: 1px solid #43c6ac;\n  background: transparent;\n  padding: 5px 20px;\n  outline: none;\n  transition: .2s;\n  color: #43c6ac;\n  font-weight: 800;\n  &:hover {\n    background: #43c6ac;\n    color: #fff;\n  }\n  &:active {\n    box-shadow: inset 0 1px 10px rgba(0,0,0,.25);\n  }\n  &:disabled {\n    background: gray;\n    color: #fff;\n    cursor: not-allowed;\n    border: 1px solid gray;\n  }\n`","import styled from 'styled-components'\n\nexport const Frame = styled.div`\n  width: 50%;\n  margin: 100px auto;\n  height: 300px;\n  display: flex;\n  box-shadow: 0 2px 15px rgba(0,0,0,.25);\n  padding: 10px;\n`\n\nexport const LeftBox = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  border: 2px solid #fff;\n  & > img {\n    width: 100%;\n  }\n`\n\nexport const RightBox = styled.div`\n  flex: 4;\n  display: flex;\n  padding: 20px;\n  border-left: 1px solid rgba(0,0,0,.25);\n  flex-direction: row;\n`\n\nexport const BaseData = styled.div`\n  flex: 1;\n  flex-direction: column;\n  & > div {\n    margin: 10px 0;\n  }\n  & > span {\n    display: block;\n    margin: 10px 0;\n  }\n  & > .types {\n\n  }\n`\n\nexport const Stats = styled.div`\n  flex: 2;\n  flex-direction: column;\n  & > .abilities {\n    width: 100%;\n    margin: 10px 0;\n  }\n  & > .stats {\n    width: 100%;\n    margin: 10px 0;\n  }\n`","import React from 'react'\nimport {\n  Frame,\n  LeftBox,\n  RightBox,\n  BaseData,\n  Stats\n} from './styled'\nimport { pokemons } from '../../reducers/pokemon'\n\nconst Card = ({ pokemon }) => (\n  <Frame>\n  {console.log('pokemon>>', pokemon)}\n    <LeftBox>\n      <img\n        src={pokemon.extra_data && pokemon.extra_data.sprites && pokemon.extra_data.sprites.front_default}\n        alt={pokemon.name}\n      />\n    </LeftBox>\n    <RightBox>\n      <BaseData>\n        <span>Name: {pokemon.name}</span>\n        <span>Types:</span>\n        {\n          pokemon.extra_data && pokemon.extra_data.types && pokemon.extra_data.types.map(({ type: { name } }) =>(\n            <div>{name}</div>\n          ))\n        }\n      </BaseData>\n      <Stats>\n        <div className='abilities'>\n          <span>Abilities: </span>\n          <div>\n            {\n              pokemon.extra_data && pokemon.extra_data.abilities.map(({ ability: { name } }, i) => (\n                <span key={i}>{name} </span>\n              ))\n            }\n          </div>\n        </div>\n        <div className='stats'>\n          <span>Stats: </span>\n          {\n            pokemon.extra_data && pokemon.extra_data.stats.map(({ base_stat, stat: { name } }, i) => (\n              <div key={i}>\n                <span>{name} - </span>\n                <span>{base_stat}</span>\n              </div>\n            ))\n          }\n        </div>\n      </Stats>\n    </RightBox>\n  </Frame>\n)\n\nexport default Card\n","import styled from 'styled-components'\n\nexport default styled.div`\n  border: 16px solid #F8FFAE;\n  border-top: 16px solid #43C6AC;\n  border-radius: 50%;\n  width: 150px;\n  height: 150px;\n  animation: spin 2s linear infinite;\n  margin: 30vh auto;\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getPokedex } from '../../actions/getData'\nimport {\n  MainContainer,\n  Row\n} from './styled'\nimport {\n  Mosaic,\n  Loading\n} from '../../components'\n\nclass Home extends Component {\n  componentDidMount () {\n    this.props.getPokedex()\n  }\n  render () {\n    const { pokemons } = this.props\n    return (\n      <MainContainer>\n\n        <Row>\n        {\n          pokemons && pokemons.length > 0 ? <Mosaic pokemons={pokemons} /> : <Loading />\n        }\n        </Row>\n      </MainContainer>\n    )\n  }\n}\n\nconst MapStateToProps = ({ pokemons }) => {\n  return {\n    pokemons\n  }\n}\n\nconst MapDispatchToProps = {\n  getPokedex\n}\n\nexport default connect(MapStateToProps, MapDispatchToProps)(Home)","import styled from 'styled-components'\n\nexport const MainContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const Row = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  box-sizing: border-box;\n`","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect, withRouter } from 'react-router-dom'\nimport { getPokedex } from '../../actions/getData'\nimport {\n  MainContainer\n} from './styled'\nimport {\n  Card,\n  Loading\n} from '../../components'\nclass PokemonDetail  extends Component {\n  constructor () {\n    super()\n    this.state = {\n      currentPokemon: []\n    }\n    this.findpokemonData = this.findpokemonData.bind(this)\n  }\n  componentDidMount () {\n    this.props.getPokedex()\n  }\n  findpokemonData () {\n    let { pokemons } = this.props\n    let pkname = this.props.match.params.name\n    let pokemon = pokemons.filter(({ name }) => name == pkname)\n    return <Card pokemon={pokemon[0]} />\n\n  }\n  render() {\n    let { pokemons } = this.props\n    let pkname = this.props.match.params.name\n    return (\n      <MainContainer>\n      {\n        pokemons && pokemons.length > 0 && pkname ? \n        this.findpokemonData() \n          :\n          pkname ? \n            <Loading />\n            :\n            <Redirect push\n              to='/'\n            />\n      }\n      </MainContainer>\n    )\n  }\n}\n\nconst MapStateToProps = ({ pokemons }) => {\n  return {\n    pokemons\n  }\n}\n\nconst MapDispatchToProps = {\n  getPokedex\n}\n\nexport default withRouter(connect(MapStateToProps, MapDispatchToProps)(PokemonDetail))\n","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom';\nimport store from './store'\nimport { Provider } from 'react-redux';\nimport { Home, PokemonDetail } from \"./containers\";\nimport { Head } from './components/'\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Head />\n      <Router>\n        <Route exact path=\"/\" component={Home} />\n        <Route component={PokemonDetail} path=\"/pokemon/\" />\n        <Route component={PokemonDetail} path=\"/pokemon/:name\" />\n      </Router>\n    </Provider>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}